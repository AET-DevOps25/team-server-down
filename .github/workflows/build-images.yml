name: Build and Push Docker images

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    outputs:
      repo: ${{ steps.set-vars.outputs.repo }}
      tag: ${{ steps.set-vars.outputs.tag }}
      api_url: ${{ steps.set-vars.outputs.api_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set variables
        id: set-vars
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
          echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
          if [[ "$BRANCH" == "main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
            echo "api_url=https://api.whiteboard.student.k8s.aet.cit.tum.de" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH" == "develop" ]]; then
            echo "tag=develop" >> $GITHUB_OUTPUT
            echo "api_url=https://staging.api.whiteboard.student.k8s.aet.cit.tum.de" >> $GITHUB_OUTPUT
          else
            BRANCH_SAFE=${BRANCH//\//-}
            echo "tag=$BRANCH_SAFE" >> $GITHUB_OUTPUT
            echo "api_url=https://$BRANCH_SAFE.api.whiteboard.student.k8s.aet.cit.tum.de" >> $GITHUB_OUTPUT
          fi

  build-client:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-client
          key: ${{ runner.os }}-client-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-client-

      - name: Build and push client image
        uses: docker/build-push-action@v3
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ghcr.io/${{ needs.setup.outputs.repo }}/client:${{ needs.setup.outputs.tag }}
          build-args: API_URL=${{ needs.setup.outputs.api_url }}
          platforms: linux/amd64

  build-server:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-server
          key: ${{ runner.os }}-server-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-server-

      - name: Build and push server image
        uses: docker/build-push-action@v3
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ghcr.io/${{ needs.setup.outputs.repo }}/server:${{ needs.setup.outputs.tag }}
          build-args: API_URL=${{ needs.setup.outputs.api_url }}
          platforms: linux/amd64
